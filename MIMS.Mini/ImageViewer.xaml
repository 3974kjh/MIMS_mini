<Window x:Class="MIMS.Mini.ImageViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MIMS.Mini"
             mc:Ignorable="d" 
             WindowStyle="None" ResizeMode="CanResize" WindowStartupLocation="CenterScreen"
             Title ="" Height="1000" Width="1400" Background="White" Activated="Window_Activated" Closing="Window_Closing"
             StateChanged="Window_StateChanged" LocationChanged="Window_LocationChanged">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="0" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF314057"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Cursor="Hand" CornerRadius="5" BorderThickness="1" BorderBrush="#FF546E95" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#60000000" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FF2E3455">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Name="main" Margin="0" Background="#FF314057">
            <DockPanel>
                <Border Name="border" DockPanel.Dock="Top" Height="30">
                    <Grid>
                        <!-- Title Bar Area -->
                        <Label Content=" MIMS." FontSize="15" Foreground="#FFB2DDEA" FontWeight="Bold"/>
                        <Label Content="          Mini 뷰어" Foreground="White" FontSize="15" FontWeight="Bold"/>
                        <Label VerticalContentAlignment="Center" Margin="10,0,105,0"  PreviewMouseDown="System_MouseDown" PreviewMouseMove="System_MouseMove">
                            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        </Label>
                        <Grid HorizontalAlignment="Right">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Button}" x:Key="systemButton">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="35"/>
                                    <Setter Property="Height" Value="30"/>
                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"  BorderThickness="0">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Background" Value="LightGray" />
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Grid.Resources>
                            <Button Click="Close_Click">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource systemButton}">
                                        <Style.Triggers>
                                            <Trigger Property="Button.IsMouseOver" Value="True">
                                                <Setter Property="Button.Background" Value="Red" />
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </Button.Style>
                                <Canvas Height="25" Width="35">
                                    <Line    
                X1="12" Y1="8" 
                X2="22" Y2="18"    
                Stroke="White" StrokeThickness="0.75"/>

                                    <Line    
                X1="12" Y1="18"    
                X2="22" Y2="8"  
                Stroke="White" StrokeThickness="0.75"/>
                                </Canvas>
                            </Button>
                            <Button Margin="0,0,35,0" Click="Maximize_Click"  Style="{DynamicResource systemButton}">
                                <Grid>
                                    <Rectangle Name="rectMax" Width="11" Height="11"
                    Stroke="White"
                    StrokeThickness="0.75"/>
                                    <Canvas Name="rectMin"  Visibility="Hidden">
                                        <Polyline Points="2.375,2 2.375,0.375 10.625,0.375 10.625,8.625 9,8.625"
                            StrokeThickness="0.75" Stroke="White"/>
                                        <Rectangle Width="9" Height="9"
                    Stroke="White"
                    StrokeThickness="0.75" Margin="0,2,2,0"/>

                                    </Canvas>
                                </Grid>
                            </Button>
                            <Button Margin="0,0,70,0" Click="Mimimize_Click"  Style="{DynamicResource systemButton}">
                                <Rectangle Width="11"
                    Stroke="White"
                    StrokeThickness="0.75"/>
                            </Button>
                        </Grid>
                    </Grid>
                </Border>
                <Grid DockPanel.Dock="Bottom">
                    <!-- Content Area -->
                </Grid>
            </DockPanel>
        </Border>
        <Grid Grid.Row="1" Background="#FF546E95" Margin="20,20,20,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="GhostWhite" BorderBrush="black" BorderThickness="0.5" HorizontalAlignment ="Left" Width="auto" Margin="10,10,10,10">
                <TextBlock Height="50" Margin="10,0,0,0" Foreground="Black" FontWeight="Bold" FontSize="35" Text="{Binding PatientNameAndNumber}"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="0,10,10,10" Orientation="Horizontal">
                <Button Content="+" Background="#FF3B3C4F" VerticalContentAlignment="Center" FontSize="50" Width="50" Height="50" FontWeight="Bold" Command="{Binding ZoomInCommand}" FontStretch="Expanded" FontFamily="MS Gothic"/>
                <Button Content="-" Background="#FF3B3C4F" VerticalContentAlignment="Center" FontSize="50" Width="50" Height="50" FontWeight="Bold" Margin="0,0,0,0" FontFamily="MS Gothic" Command="{Binding ZoomOutCommand}"/>

                <Button Height="50" Width="50" FontWeight="Bold" Foreground="FloralWhite" Command="{Binding TurnRightCommand}">
                    <Button.Background>
                        <ImageBrush ImageSource="imageicon/1.PNG"/>
                    </Button.Background>
                </Button>
                <Button Height="50" Width="50" FontWeight="Bold" Foreground="FloralWhite" Command="{Binding TurnLeftCommand}">
                    <Button.Background>
                        <ImageBrush ImageSource="imageicon/2.PNG"/>
                    </Button.Background>
                </Button>
                <Button Content="" Height="50" Width="50" FontWeight="Bold" Foreground="FloralWhite" Command="{Binding FlipImageHorizontallyCommand}">
                    <Button.Background>
                        <ImageBrush ImageSource="imageicon/3.PNG"/>
                    </Button.Background>
                </Button>
                <Button Content="" Height="50" Width="50" FontWeight="Bold" Foreground="FloralWhite" Command="{Binding FlipImageVerticallyCommand}">
                    <Button.Background>
                        <ImageBrush ImageSource="imageicon/4.PNG"/>
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
        <Border Grid.Row="2" Margin="10,10,10,0" BorderBrush="#FFB2DDEA" BorderThickness="2">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="Black">
                <Image Source="{Binding SelectedImage.OriginalImage}" OpacityMask="{x:Null}" Stretch="None" RenderTransformOrigin="0.5,0.5">
                    <Image.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="{Binding ScaleX}"/>
                            <ScaleTransform ScaleY="{Binding ScaleY}"/>
                        </TransformGroup>
                    </Image.LayoutTransform>
                </Image>
            </ScrollViewer>
        </Border>
        <ToggleButton Grid.Row="3" x:Name="xToggleBtn" Width="auto" Background="#FF2E3455">
            <Image x:Name="xImage" Stretch="Uniform">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="imageicon/outside.png"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=xToggleBtn, Path=IsChecked}" Value="True">
                                <Setter Property="Source" Value="imageicon/outside.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=xToggleBtn, Path=IsChecked}" Value="False">
                                <Setter Property="Source" Value="imageicon/inside.png"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </ToggleButton>
        <Grid Grid.Row="4" Margin="20,0,20,20">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=xToggleBtn, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=xToggleBtn, Path=IsChecked}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ListBox Background="GhostWhite" x:Name="ImageList" ItemsSource="{Binding ImageInfoList}" SelectedItem="{Binding SelectedImage}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.ColumnSpan="5">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="150" Width="100">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="115"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Background="Black">
                                <Image Source="{Binding ThumbnailImage}"/>
                            </Grid>
                            <StackPanel Grid.Row="1" Orientation="Vertical" Background="Black">
                                <Label Content="{Binding ShowImageDate}" Foreground="FloralWhite" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
